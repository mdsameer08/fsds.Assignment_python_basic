1.What exactly is[]?
Ans:- [] is a empty list,like a =[]
2. In a list of values stored in a variable called spam,
   how would you assign the value hello' as the third value?
   (Assume [2,4,6,8,10] are in spam)
Ans. solution by changing the value in index 3
     spam = [2,4,6,8,10]
     spam[2] = 'hello'
     spam
     Output - [2,4,'hello',8,10]
     Lets pretend the spam include the list ['a','b','c','d'] for the next three queries.
3.What is the value of spam[int(int(3*2)/11)]
Ans. spam = ['a', 'b','c','d']
spam[int(int('3' * 2) / 11)] # spam[int(33/11)] = spam[3]
     
output-'d'
4.What is the value of spam[-1]?
Ans.spam = ['a', 'b','c','d']
spam[-1] # negative index # d
output-'d'
5.What is the value of spam[:2]?
Ans.spam[:2]
output-['a','b']
*Let's pretend bacon has the list [3.14, 'cat' 11, 'cat' True] for the next three questions.*

6.What is the value of bacon.index('cat')?
Ans.bacon = [3.14, 'cat', 11, 'cat', True]
    bacon.index('cat') # it returns the index of first occurrence of 'cat'
     
 output-1
7.How does bacon.append(99) change the look of the list value in bacon?

Ans.bacon = [3.14, 'cat', 11, 'cat', True]
    bacon.append(99) # append adds the item at the end of the list
    bacon
     
Output-[3.14, 'cat', 11, 'cat', True, 99]
8.How does bacon.remove('cat') change the look of the list in bacon?

Ans.bacon = [3.14, 'cat', 11, 'cat', True]
    bacon.remove('cat') # remove first occurrence of item
    bacon
     
Output-[3.14, 11, 'cat', True]
9.What are the list concatenation and list replication operators?
Ans.( * ) is list replication operator ( + ) is list concatination operator


   l1 = [1,4]
   l2 = [2,5]
   # list concatination
   l1+l2
     
Output-[1, 4, 2, 5]


   l1 = [7,4]

   # list replication
   l1*3
     
Output-[7, 4, 7, 4, 7, 4]
10.What is difference between the list methods append() and insert()?
Ans.append() Appends object to the end of the list
    insert() Insert object before index



    bacon = [3.14, 'cat', 11, 'cat', True]
    bacon.append(99) # append adds the item at the end of the list
    bacon
     
Output-[3.14, 'cat', 11, 'cat', True, 99]

    # solution by inserting value in 3rd index
    spam = [2, 4, 6, 8, 10]
    spam.insert(2,'hello')
    spam
     
Output-[2, 4, 'hello', 6, 8, 10]
11.What are the two methods for removing items from a list?

Ans.
#remove(item) - removeds first occurence of a item
bacon = [3.14, 'cat', 11, 'cat', True]
bacon.remove('cat')
bacon
     
Output-[3.14, 11, 'cat', True]
#pop() - Remove and returns item at index (default last).
bacon = [3.14, 'cat', 11, 'cat', True]
bacon.pop()
bacon
     
[3.14, 'cat', 11, 'cat']
Describe how list values and string values are identical.
Both lists and strings can be passed to len()
Have indexes and slices
Can be used in for loops
Can be concatenated or replicated
Can be used with the in and not in operators
What's the difference between tuples and lists?
Lists : are mutable - they can have values added, removed, or changed. lists use the square brackets, [ and ]
Tuples : are immutable; they cannot be changed at all. Tuples are written using parentheses, ( and )

12.How do you type a tuple value that only contains the integer 42?

tuple = (42,)
tuple
     
(42,)
13How do you get a list value's tuple form? How do you get a tuple value's list form?
l1 = [2,3]
l = tuple(l1)
l

     
(2, 3)

t1 = (3,4)
t = list(t1)
t
     
[3, 4]
14Variables that "contain" list values are not necessarily lists themselves. Instead, what do they contain?
Ans. They contain references to list values

15.How do you distinguish between copy.copy() and copy.deepcopy()?
Ans . The copy.copy() function will do a shallow copy of a list,
The copy.deepcopy() function will do a deep copy of a list. only copy.deepcopy() will duplicate any lists inside the list

